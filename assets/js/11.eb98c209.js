(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{191:function(v,_,i){"use strict";i.r(_);var a=i(0),l=Object(a.a)({},function(){var v=this,_=v.$createElement,i=v._self._c||_;return i("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[i("h1",{attrs:{id:"認定スクラムデベロッパー研修（csd）に参加してきました。"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#認定スクラムデベロッパー研修（csd）に参加してきました。","aria-hidden":"true"}},[v._v("#")]),v._v(" 認定スクラムデベロッパー研修（CSD）に参加してきました。")]),v._v(" "),i("p",[v._v("2020/3/2~6に開催された、"),i("a",{attrs:{href:"https://www.jp.agilergo.com/csd-bernstein-202003",target:"_blank",rel:"noopener noreferrer"}},[v._v("アギレルゴコンサルティングさん主催『認定スクラムデベロッパー研修（CSD）』"),i("OutboundLink")],1),v._v("に参加してきました。"),i("br"),v._v("\n業務多忙の中、またコロナウィルス関連でいろいろな混乱の中で、参加を快諾していただいたプロジェクトメンバーと、家族に感謝です。\n（追記：あと当然ですが、こんな状況の中で来日していただき、講師を努めてくれたデビット・バーンスタインさん、開催＆会場提供していただいたアギレルゴコンサルティングさんにも感謝です！！書き忘れてた・・）")]),v._v(" "),i("p",[v._v("認定スクラムマスター研修（CSM）を2019年04月に受講していたので、自分にとっては２つ目の認定研修でした。\nちょっと研修から日程が経過してしまいましたが、改めて思い出しながらアウトプットしていきたいと思います。")]),v._v(" "),i("h2",{attrs:{id:"参加までの思い"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#参加までの思い","aria-hidden":"true"}},[v._v("#")]),v._v(" 参加までの思い")]),v._v(" "),i("p",[v._v("アジャイルにはスクラムのようなプロセスのフレームワークと、XP/TDDのようなテクニカルなプラクティスがあって、CSD研修はこのうちの後者のテクニカルな部分を５日間どっぷり学ぶ研修ということで、参加前からとても楽しみにしていました。")]),v._v(" "),i("p",[v._v("アジャイル開発というと、とかくスプリントやリリースサイクルのほうに話が向かいがちで、技術の部分が置き去りになってしまう傾向にあるような気がしていました。"),i("br"),v._v("\nスクラムをしっかり実践するのは重要ですが、それはテスト駆動開発やXPをしっかり実践することが前提となっていて、その上にでないと成立しないだろうという考えがずっと自分の中にありました。")]),v._v(" "),i("p",[v._v("動作可能なインクリメントを追加し続けて、変更前のプロダクトに影響がないことを確認するには、テストコードとCI環境が不可欠で、それがないとイテレーションが進むたびにリグレッションテストの工数が膨張するし、問題発生時の影響調査もどんどん複雑化します。"),i("br"),v._v("\n自分としては、テクニカルな部分がアジャイルを実践する上で基礎にあたる部分だと思ってます。"),i("br"),v._v("\nしかし、スクラムガイドにはテストコードを書けとは書いていないし、その部分について語られる機会も少ないように思います。")]),v._v(" "),i("p",[v._v("実際、テストコードの効果を感じたことのない人にテストコードの価値を説明するのは想像以上に大変です。非エンジニアのマネージャーとかだともっと大変です。"),i("br"),v._v("\nテストコードはあればあったに越したことはない、でも書きすぎるとテストコードのメンテナンスコストも上がるから微妙、といった意見もよく聞きます。"),i("br"),v._v("\nテストコードは早起きみたいなものだという例えはとても的を射た表現だと思います。"),i("br"),v._v("\nそういう意見のある中でテストコードを推進しつづけるというのはなかなか消耗するし、自分の思いをうまく言語化できないことにも無力感を感じていました。")]),v._v(" "),i("p",[v._v("テストコードのメリットを受け続けながら、greenなコードをメンテしつづけるにはどうしたらいいのか。"),i("br"),v._v("\nテストコードを書きたがらないチームメンバーにどう説得するのか。"),i("br"),v._v("\nテストコードのためのコストをマネージャにどう説明するのか。"),i("br"),v._v("\nこういうことを人に説明するには、まず自分がもっと体系立ててロジカルに理解する必要がある、という思いがありました。")]),v._v(" "),i("p",[v._v("前フリがだいぶ長くなってしまいましたが、研修参加前の自分の心境はこんな感じでした。")]),v._v(" "),i("h2",{attrs:{id:"研修メモ"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#研修メモ","aria-hidden":"true"}},[v._v("#")]),v._v(" 研修メモ")]),v._v(" "),i("p",[v._v("ここからは研修時の主に講義の部分のメモです。")]),v._v(" "),i("h3",{attrs:{id:"保守可能なコードをどう書くか"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#保守可能なコードをどう書くか","aria-hidden":"true"}},[v._v("#")]),v._v(" 保守可能なコードをどう書くか")]),v._v(" "),i("ul",[i("li",[v._v("技術的負債のないコードとはどういうものか")]),v._v(" "),i("li",[v._v("他のだれかが保守できるようにするとはどういうことか")]),v._v(" "),i("li",[v._v("それは、ソフトウェアを未来に渡って価値のあるものにするということ")]),v._v(" "),i("li",[v._v("ふつうに動作するプログラムを書くだけなら誰でもできる\n"),i("ul",[i("li",[v._v("他の人が理解できる美しい書き方をするというのはとても難しい")]),v._v(" "),i("li",[v._v("ほとんどの人はそれがあまりできていない")]),v._v(" "),i("li",[v._v("でもそれは創造的で面白いこと")])])]),v._v(" "),i("li",[v._v("リファクタリングについて\n"),i("ul",[i("li",[v._v("自分が美しいコードを書いたと思っても、何がうまくいっているのか、正しく行われているか。\n"),i("ul",[i("li",[v._v("リファクタリングのゴールが見えない問題")]),v._v(" "),i("li",[v._v("そのリファクタリングは他の人にとっても、うまくいっていると言えるのか")]),v._v(" "),i("li",[v._v("じゃあどうリファクタリングすればいいのか")])])])])]),v._v(" "),i("li",[v._v("その一つの答えが、デザインパターンを使うこと")])]),v._v(" "),i("h3",{attrs:{id:"ユーザーストーリー"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#ユーザーストーリー","aria-hidden":"true"}},[v._v("#")]),v._v(" ユーザーストーリー")]),v._v(" "),i("ul",[i("li",[v._v("ユーザーストーリーを作成し、それをさらに分割して下に伸ばしていく")]),v._v(" "),i("li",[v._v("ストーリーをどうやって分割するか\n"),i("ul",[i("li",[v._v("サイズを小さくする")]),v._v(" "),i("li",[v._v("INVEST")]),v._v(" "),i("li",[v._v("ストーリー間の依存関係を排除する")]),v._v(" "),i("li",[v._v("ストーリーに詳細は入れない。あとでいい。")])])]),v._v(" "),i("li",[v._v("ユーザーストーリーとは、、\n"),i("ul",[i("li",[v._v("話し合うことを「約束」すること")]),v._v(" "),i("li",[v._v("ユースケースとは違う")]),v._v(" "),i("li",[v._v("要件とも違う")])])]),v._v(" "),i("li",[v._v("複合型のストーリー\n"),i("ul",[i("li",[v._v("分解してシンプルにすべき")])])]),v._v(" "),i("li",[v._v("複雑なストーリー\n"),i("ul",[i("li",[v._v("未知の要素があるから複雑になる")]),v._v(" "),i("li",[v._v("知っていることとわからないことを分離する")]),v._v(" "),i("li",[v._v("未知のところに対してイテレーションする")]),v._v(" "),i("li",[v._v("知っていることが増えるほど、複雑でなくなる")])])]),v._v(" "),i("li",[v._v("良いストーリーはテストしやすく、コーディングしやすい")])]),v._v(" "),i("h3",{attrs:{id:"デザインパターン"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#デザインパターン","aria-hidden":"true"}},[v._v("#")]),v._v(" デザインパターン")]),v._v(" "),i("h4",{attrs:{id:"デザインパターンとは"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#デザインパターンとは","aria-hidden":"true"}},[v._v("#")]),v._v(" デザインパターンとは")]),v._v(" "),i("ul",[i("li",[v._v("抽象化によって世界をシンプルにして理解しやすくするための方法")]),v._v(" "),i("li",[v._v("デザインパターンは本質を理解することが大事\n"),i("ul",[i("li",[v._v("本質さえ理解してしまえば暗記する必要はない")]),v._v(" "),i("li",[v._v("もしかしたら既に使っているかもしれないし、まだ名前のないものもあるかもしれない")])])])]),v._v(" "),i("h4",{attrs:{id:"継承よりも集約"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#継承よりも集約","aria-hidden":"true"}},[v._v("#")]),v._v(" 継承よりも集約")]),v._v(" "),i("ul",[i("li",[v._v("伝統的に継承を使いすぎてしまっている\n"),i("ul",[i("li",[v._v("なぜ継承を多用してしまったか？\n"),i("ul",[i("li",[v._v("歴史が浅かったため、継承による弊害が見えていなかった")])])])])]),v._v(" "),i("li",[v._v("実際に使わないメソッドまで作ってしまう（getterやsetterはcode smell）")])]),v._v(" "),i("h4",{attrs:{id:"デザインの第一原理"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#デザインの第一原理","aria-hidden":"true"}},[v._v("#")]),v._v(" デザインの第一原理")]),v._v(" "),i("ul",[i("li",[v._v("オープンクローズドの原則\n"),i("ul",[i("li",[v._v("拡張のために開かれていて、変更には閉じられている\n"),i("ul",[i("li",[v._v("できれば、何も既存のコードを変えずに、新しい機能を追加する")])])])])]),v._v(" "),i("li",[v._v("単一責任の原則\n"),i("ul",[i("li",[v._v("変更する理由が一つ\n"),i("ul",[i("li",[v._v("変更を加えるために必要な変更は一箇所になる")])])])])]),v._v(" "),i("li",[v._v("依存関係逆転の原則\n"),i("ul",[i("li",[v._v("呼び出し側が何を欲しがるのか")]),v._v(" "),i("li",[v._v("APIが呼び出し側に合わせるほうがかんたん")])])])]),v._v(" "),i("h4",{attrs:{id:"パターンとは知恵"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#パターンとは知恵","aria-hidden":"true"}},[v._v("#")]),v._v(" パターンとは知恵")]),v._v(" "),i("ul",[i("li",[v._v("アイデアが詰まっているが、理解しにくい\n"),i("ul",[i("li",[v._v("３D立体視のようなもので、普通に見てもなかなか見えないが、コツがわかればある日突然浮かび上がってみえるようになる")])])]),v._v(" "),i("li",[v._v("再利用できるソリューション\n"),i("ul",[i("li",[v._v("問題の中にパターンを見つける")])])]),v._v(" "),i("li",[v._v("デザインパターンを学ぶことでオブジェクト指向をより深く理解できる")]),v._v(" "),i("li",[v._v("パターンは高品質なコミュニケーションツールとして使うことができる\n"),i("ul",[i("li",[v._v("概念化")]),v._v(" "),i("li",[v._v("説明のしやすさ")]),v._v(" "),i("li",[v._v("コーディングのしやすさ")]),v._v(" "),i("li",[v._v("デザインを他者に伝達のしやすさ")])])])]),v._v(" "),i("h4",{attrs:{id:"パターンをうまく利用するためのいくつかのフォース"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#パターンをうまく利用するためのいくつかのフォース","aria-hidden":"true"}},[v._v("#")]),v._v(" パターンをうまく利用するためのいくつかのフォース")]),v._v(" "),i("ul",[i("li",[v._v("「文脈」的なフォース\n"),i("ul",[i("li",[v._v("いつ、どんな状態のときにそのパターンが発生するか\n"),i("ul",[i("li",[v._v("メタファを用いる")]),v._v(" "),i("li",[v._v("使い分けが必要\n"),i("ul",[i("li",[v._v("拡張性が必要ならストラテジーが使えるが、そうでないならコストの無駄")])])])])])])]),v._v(" "),i("li",[v._v("「実施」のためのフォース\n"),i("ul",[i("li",[v._v("問題解決のために仕様するパターンの種類\n"),i("ul",[i("li",[v._v("パターンの適用のしかたは一つではない")])])])])]),v._v(" "),i("li",[v._v("「帰結」のフォース\n"),i("ul",[i("li",[v._v("パターンを適用した後の結果の良し悪し\n"),i("ul",[i("li",[v._v("何をカプセル化することで、どれくらい保守性が向上するか\n"),i("ul",[i("li",[v._v("パターンを適用したらテストができるようになった、など")])])])])])])]),v._v(" "),i("li",[v._v("そして一番重要なフォースは「意図 - intent」\n"),i("ul",[i("li",[v._v("「意図」を通してパターンを眺めることで、より深く理解できる")])])])]),v._v(" "),i("h3",{attrs:{id:"xp"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#xp","aria-hidden":"true"}},[v._v("#")]),v._v(" XP")]),v._v(" "),i("h4",{attrs:{id:"アジャイルをエンジニアに取り戻せ"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#アジャイルをエンジニアに取り戻せ","aria-hidden":"true"}},[v._v("#")]),v._v(" アジャイルをエンジニアに取り戻せ")]),v._v(" "),i("ul",[i("li",[v._v("アジャイルマニュフェストは１７人エンジニアが作った\n"),i("ul",[i("li",[v._v("１７人は全員エンジニア")]),v._v(" "),i("li",[v._v("継続的デリバリーやテスト駆動開発といった「技術的な卓越」がなければアジャイルはできない")]),v._v(" "),i("li",[v._v("クリーンなコードを書く習慣が重要")])])]),v._v(" "),i("li",[v._v("いつしかアジャイルはマネジメントに利用され、認定マシンと化してしまった")])]),v._v(" "),i("h4",{attrs:{id:"tddメリット"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#tddメリット","aria-hidden":"true"}},[v._v("#")]),v._v(" TDDメリット")]),v._v(" "),i("ul",[i("li",[v._v("デザインの原則")]),v._v(" "),i("li",[v._v("関心事の分離")]),v._v(" "),i("li",[v._v("タスク分割")]),v._v(" "),i("li",[v._v("回帰テスト")])]),v._v(" "),i("h4",{attrs:{id:"tddの失敗"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#tddの失敗","aria-hidden":"true"}},[v._v("#")]),v._v(" TDDの失敗")]),v._v(" "),i("ul",[i("li",[v._v("TDD is dead?")]),v._v(" "),i("li",[v._v("テストのリファクタリングに時間がかかる\n"),i("ul",[i("li",[v._v("テストもコードなので、製品コードと同様に品質をもとめるべき")])])]),v._v(" "),i("li",[v._v("コードカバレッジに意味のある数字は100%\n"),i("ul",[i("li",[v._v("単純なgetterもsetterも中に入っている")]),v._v(" "),i("li",[v._v("80%にするとどうなるか？\n"),i("ul",[i("li",[v._v("カバレッジを保つために単純なメソッドテストコードを集中して、複雑で重要な部分を後回しにしてしまう")])])]),v._v(" "),i("li",[v._v("ただし、テストする意味のないコードに対してまで100%である必要はない\n"),i("ul",[i("li",[v._v("ようは、ちゃんと説明できればいい")])])])])])]),v._v(" "),i("h4",{attrs:{id:"xpのプラクティス"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#xpのプラクティス","aria-hidden":"true"}},[v._v("#")]),v._v(" XPのプラクティス")]),v._v(" "),i("ul",[i("li",[v._v("who->what->why->howの順でやる\n"),i("ul",[i("li",[v._v("細かく指示しない")]),v._v(" "),i("li",[v._v("what->ビジネス側")]),v._v(" "),i("li",[v._v("how->開発者\n"),i("ul",[i("li",[v._v("howをビジネス側の人間に握らせない")]),v._v(" "),i("li",[v._v("彼らがソフトウェア開発をしてはいけない")]),v._v(" "),i("li",[v._v("ビジネスの専門家、テクニカルレベルが一番低い人が要求をつくる")]),v._v(" "),i("li",[v._v("お客さまが必要なものをソフトウェアに翻訳する能力があるのは開発者")])])])])]),v._v(" "),i("li",[v._v("共に働く\n"),i("ul",[i("li",[v._v("コミュニティ開発が必要\n"),i("ul",[i("li",[v._v("swarming")]),v._v(" "),i("li",[v._v("ペア")])])]),v._v(" "),i("li",[v._v("重いものをみんなで運ぶようなもの")])])]),v._v(" "),i("li",[v._v("クリーンなコード\n"),i("ul",[i("li",[v._v("CREATE CLEAN")])])]),v._v(" "),i("li",[v._v("テストで振る舞いを特定する\n"),i("ul",[i("li",[v._v("コンセンサスが得られるTDDのやり方\n"),i("ul",[i("li",[v._v("マネージャーだけでなく、他のデベロッパーも説得する必要がある")]),v._v(" "),i("li",[v._v("合意可能なしきい値を設ける\n"),i("ul",[i("li",[v._v("振る舞いを特定する部分にのみテストを書く")])])]),v._v(" "),i("li",[v._v("テストのやりすぎは、やらなすぎより悪い")])])])])]),v._v(" "),i("li",[v._v("TDDは設計のためのもの\n"),i("ul",[i("li",[v._v("設計は最後に実装する")]),v._v(" "),i("li",[v._v("レガシーコードをリファクタリングする")])])])]),v._v(" "),i("h4",{attrs:{id:"ソフトウェア開発は社会的活動である"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#ソフトウェア開発は社会的活動である","aria-hidden":"true"}},[v._v("#")]),v._v(" ソフトウェア開発は社会的活動である")]),v._v(" "),i("ul",[i("li",[v._v("チームメンバーは一緒に意思疎通をしながら働く必要がある\n"),i("ul",[i("li",[v._v("共通理解")]),v._v(" "),i("li",[v._v("共通言語")]),v._v(" "),i("li",[v._v("助け合い")])])]),v._v(" "),i("li",[v._v("ペアプログラミング\n"),i("ul",[i("li",[v._v("この効果について、マネージャーの説得が最も難しい")]),v._v(" "),i("li",[v._v("よいコードが書ける")]),v._v(" "),i("li",[v._v("楽しい")]),v._v(" "),i("li",[v._v("スピードが上がる")])])]),v._v(" "),i("li",[v._v("どうやってペアを組むか\n"),i("ul",[i("li",[v._v("ランダムにペアを組む")]),v._v(" "),i("li",[v._v("自分と考えが違う人、視点が違う人など")]),v._v(" "),i("li",[v._v("ストロングスタイルペア\n"),i("ul",[i("li",[v._v('"頭の中のアイデアがコンピューターの中にいくには、他の誰かの手を通していかなければならない"')])])]),v._v(" "),i("li",[v._v("ピンポンペア\n"),i("ul",[i("li",[v._v("片方がテストを書いて、もう片方がそれをパスするコードを書く")])])])])]),v._v(" "),i("li",[v._v("ペアプログラミングの恩恵\n"),i("ul",[i("li",[v._v("プログラム時間が15%増加")]),v._v(" "),i("li",[v._v("集中できて、割り込みも発生しなくなる")])])])]),v._v(" "),i("h2",{attrs:{id:"実習のメモ"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#実習のメモ","aria-hidden":"true"}},[v._v("#")]),v._v(" 実習のメモ")]),v._v(" "),i("p",[v._v("ここからは３日目〜５日目に行った実習のメモと思ったこと")]),v._v(" "),i("h3",{attrs:{id:"tddの３ステップ"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#tddの３ステップ","aria-hidden":"true"}},[v._v("#")]),v._v(" TDDの３ステップ")]),v._v(" "),i("ul",[i("li",[v._v("red\n"),i("ul",[i("li",[v._v("期待を定義")])])]),v._v(" "),i("li",[v._v("green\n"),i("ul",[i("li",[v._v("動作させる")])])]),v._v(" "),i("li",[v._v("gold\n"),i("ul",[i("li",[v._v("きれいに仕上げる")])])])]),v._v(" "),i("h4",{attrs:{id:"レッドバーをグリーンに変える"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#レッドバーをグリーンに変える","aria-hidden":"true"}},[v._v("#")]),v._v(" レッドバーをグリーンに変える")]),v._v(" "),i("ul",[i("li",[v._v("必ず最初に失敗させることが大事")]),v._v(" "),i("li",[v._v("なぜ失敗させるか\n"),i("ul",[i("li",[v._v("テストがちゃんと稼働して、エラーの場合にちゃんと失敗が検出されることが保証されていることを確認する")])])]),v._v(" "),i("li",[v._v("celebrate the red bar\n"),i("ul",[i("li",[v._v("失敗するテストに価値がある")])])]),v._v(" "),i("li",[v._v("being green\n"),i("ul",[i("li",[v._v("グリーンを保つことが難しい")]),v._v(" "),i("li",[v._v("セーフティネット")])])])]),v._v(" "),i("h4",{attrs:{id:"refactor-code"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#refactor-code","aria-hidden":"true"}},[v._v("#")]),v._v(" refactor code")]),v._v(" "),i("ul",[i("li",[v._v("冗長性を排除")]),v._v(" "),i("li",[v._v("カプセル化")]),v._v(" "),i("li",[v._v("デザインパターンを追加")]),v._v(" "),i("li",[v._v("デザインはリファクタリングのフェーズで実装する")]),v._v(" "),i("li",[v._v("テストもリファクタリングする")]),v._v(" "),i("li",[v._v("３ステップを守ることで、いつごまかしのコードを実装して、いつ正しいコードを埋め込むかのリズムを教えてくれる")])]),v._v(" "),i("h4",{attrs:{id:"良いテストの条件"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#良いテストの条件","aria-hidden":"true"}},[v._v("#")]),v._v(" 良いテストの条件")]),v._v(" "),i("ul",[i("li",[v._v("常に既知の理由で失敗する")]),v._v(" "),i("li",[v._v("他の理由で失敗しない\n"),i("ul",[i("li",[v._v("ユニークである")])])]),v._v(" "),i("li",[v._v("同じ理由でシステム内の他のテストが失敗することはない")])]),v._v(" "),i("h4",{attrs:{id:"ユニットテストとは「振る舞い」に対するテスト"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#ユニットテストとは「振る舞い」に対するテスト","aria-hidden":"true"}},[v._v("#")]),v._v(" ユニットテストとは「振る舞い」に対するテスト")]),v._v(" "),i("ul",[i("li",[v._v("よくメソッド向けにテストを書きがち")]),v._v(" "),i("li",[v._v("振る舞いは「what」\n"),i("ul",[i("li",[v._v("howではない")])])])]),v._v(" "),i("h4",{attrs:{id:"レガシーコードクライシス"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#レガシーコードクライシス","aria-hidden":"true"}},[v._v("#")]),v._v(" レガシーコードクライシス")]),v._v(" "),i("ul",[i("li",[v._v("コードを書き直すと、新旧の２つのコードを保守する必要がうまれる")]),v._v(" "),i("li",[v._v("リファクタリングはコードをクリーンにするだけで新機能を生み出さないので投資効果がない")]),v._v(" "),i("li",[v._v("マネージャーが理解できることは２つ\n"),i("ul",[i("li",[v._v("コスト")]),v._v(" "),i("li",[v._v("利益")])])]),v._v(" "),i("li",[v._v("変更のコストが下がるということがメリット")]),v._v(" "),i("li",[v._v("マーティンファウラーは「リファクタリング」で、コードを安全に変えられることを証明した\n"),i("ul",[i("li",[v._v("「ユニットテストコードのないコード」をレガシーコードと定義")])])])]),v._v(" "),i("h2",{attrs:{id:"まとめ・感想"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#まとめ・感想","aria-hidden":"true"}},[v._v("#")]),v._v(" まとめ・感想")]),v._v(" "),i("h3",{attrs:{id:"師に会える機会って人生でそんなに多くない"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#師に会える機会って人生でそんなに多くない","aria-hidden":"true"}},[v._v("#")]),v._v(" 師に会える機会って人生でそんなに多くない")]),v._v(" "),i("p",[v._v("テストの書き方とかデザインパターンとかをちゃんと教えてくれる先輩に恵まれた人は、きっと相当ラッキーな人で、普通はなかなかそういう人に巡り合うことはないと思います。"),i("br"),v._v("\n私もずっと独学でやってきたので、もっといい方法があるだろうなとずっと思ってきたし、コンフォートゾーンにいるとなかなか新しいテクニックを身につける機会はないと思います。"),i("br"),v._v("\ndavidさんに直接レクチャーしてもらえる機会は自分にはとてもプライスレスな時間でした。")]),v._v(" "),i("h3",{attrs:{id:"デザインパターンは自分的には「カンフー」"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#デザインパターンは自分的には「カンフー」","aria-hidden":"true"}},[v._v("#")]),v._v(" デザインパターンは自分的には「カンフー」")]),v._v(" "),i("p",[v._v("スクラムの文脈では合気道がよく引き合いに出されて、守破離とか型の話がよく出てくると思いますが、今回デザインパターンで私が思ったのは「カンフー」かなと。"),i("br"),v._v("\n問題に対してパターンを適用して対応する様子はかっこいいし、パシッとハマった時の気持ちよさがあると思いました。"),i("br"),v._v("\nそしてデザインパターンは、davidさんも言うようにとてもわかりにくい。"),i("br"),v._v("\nでも本質を押さえてさえおけばそんなに全部覚える必要もないし、上段・中段・下段くらい覚えておけばある程度対応できるんだなーというのがわかったのが、とてもいい収穫でした。")]),v._v(" "),i("h3",{attrs:{id:"tddは設計のためのもの"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#tddは設計のためのもの","aria-hidden":"true"}},[v._v("#")]),v._v(" TDDは設計のためのもの")]),v._v(" "),i("p",[v._v("ウォーターフォールの現場だとテストは品質保証のために行うものになっているので、テストコードにもそれと同等の価値を求めがちだけど、もともとのテストコードは設計のためのもの、という本来の目的を体験できる研修でした。"),i("br"),v._v("\nテストコードが振る舞いを保証してくれるからこそアグレッシブな内部実装の変更を行えるし、パターンの適用でコードの見通しがよくなり、保守性が上がっていく。"),i("br"),v._v("\nそして、品質を高めるのはあくまでコードであって、テストは振る舞いを定義するもの。"),i("br"),v._v("\nこうすることで修正変更時のテストコードの変更が最小限でよくなり、テストコードが変わるということは振る舞いが変わったということなので変更もしやすいという、とてもわかりやすい考え方だと思いました。")]),v._v(" "),i("h3",{attrs:{id:"ストーリーの完成度"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#ストーリーの完成度","aria-hidden":"true"}},[v._v("#")]),v._v(" ストーリーの完成度")]),v._v(" "),i("p",[v._v("ラボでdavidさんが用意してくれた実習の課題がよく考えられてるなーと思いました。"),i("br"),v._v("\nコードしやすく、テストも書きやすい単位で分割されていて、なるほどこういうふうにバックログを作ると開発チームはとても楽だなという、模範的なストーリーでした。"),i("br"),v._v("\n責務が分割されていて適度なサイズでテストもコードもしやすく、そういうところはさすがという感じでした。")]),v._v(" "),i("h3",{attrs:{id:"まとめ"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#まとめ","aria-hidden":"true"}},[v._v("#")]),v._v(" まとめ")]),v._v(" "),i("p",[v._v("いろいろとダラダラ書いてしまいましたが、５日間の中でデベロッパーとしての大切なお作法が凝縮されているとても高密度な研修とラボでした。\nなぜTDDなのか、なぜデザインパターンなのか、それをどう適用するのか、実際にやってみるあたりを一気通貫で体験できて、世界的な第一人者に教えてもらえるっていうのは、ほんとに贅沢な時間でした。"),i("br"),v._v("\n自分の中でもやもやしていた部分についても自信がついたと感じています。"),i("br"),v._v("\n今後学んだことを現場で生かしていきたいし、若いエンジニアに少しでも広めていきたいという思いが強くなりました。"),i("br"),v._v("\nあと、マネージャーに対してもより説得力のある説明ができるように、今後も深堀りしていきたいと思います。")]),v._v(" "),i("p",[v._v("davidさんに教えてもらったマネージャーに説明するメタファがこちら")]),v._v(" "),i("blockquote",[i("p",[v._v("レガシーコードに対して修正を加えるということは、シンクが洗い物でいっぱいになったキッチンでディナーの準備をするようなもの。まずは洗い物をしないとパーティーはできない。")])]),v._v(" "),i("p",[v._v("洗い物は溜めずに都度洗いましょう。")])])},[],!1,null,null,null);l.options.__file="20200327.md";_.default=l.exports}}]);